name: Flask App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  docker-flask:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Verify `requirements.txt` exists
      - name: Verify requirements.txt exists
        run: |
          if [ ! -f requirements.txt ]; then
            echo "Error: requirements.txt not found. Please ensure it exists in the repository root."
            exit 1
          fi

      # Step 3: Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t flask_app:${{ github.sha }} .
        id: build_image

      # Step 7: Output image build information
      - name: Output Image Build Info
        run: |
          echo "Flask app image built with tag: flask_app:${{ github.sha }}"
          docker images flask_app:${{ github.sha }}
        id: output_image_info

      # Step 8: Tag Docker image
      - name: Tag Docker Image
        run: |
          docker tag flask_app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/flask_app:latest
        id: tag_image

      # Step 9: Output tag information
      - name: Output Docker Image Tag Info
        run: |
          echo "Docker image tagged as: ${{ secrets.DOCKER_USERNAME }}/flask_app:latest"
        id: output_tag_info

      # Step 10: Push Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/flask_app:latest
        id: push_image

      # Step 11: Output push status
      - name: Output Docker Image Push Status
        run: |
          echo "Docker image pushed successfully to Docker Hub"
        id: output_push_status

      # Step 12: Save Docker Image as Artifact (tarball)
      - name: Save Docker Image as Artifact (tarball)
        run: |
          docker save -o flask_app_${{ github.sha }}.tar flask_app:${{ github.sha }}
        id: save_image_tar

      # Step 13: Upload Docker image artifact
      - name: Upload Docker Image Tarball Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: flask_app_${{ github.sha }}.tar
